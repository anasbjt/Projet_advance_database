CREATE TABLE Theatre (
   ID_theatre VARCHAR(50) PRIMARY KEY,
   Adresse VARCHAR(50),
   Nom VARCHAR(50),
   Capacite INT,
   Budget DECIMAL(10,2)
);

CREATE TABLE Representation (
   ID_representation VARCHAR(50) PRIMARY KEY,
   Titre VARCHAR(50),
   Date_representation DATE,
   Prix DECIMAL(10,2),
   ID_theatre VARCHAR(50) NOT NULL,
   FOREIGN KEY (ID_theatre) REFERENCES Theatre(ID_theatre)
);

CREATE TABLE Ticket (
   ID_ticket VARCHAR(50) PRIMARY KEY,
   Date_ticket DATE,
   Prix DECIMAL(10,2),
   Reduction INT,
   ID_representation VARCHAR(50) NOT NULL,
   ID_theatre VARCHAR(50) NOT NULL,
   FOREIGN KEY (ID_representation) REFERENCES Representation(ID_representation),
   FOREIGN KEY (ID_theatre) REFERENCES Theatre(ID_theatre)
);

CREATE TABLE Recette (
   ID_recette VARCHAR(50) PRIMARY KEY,
   Date_recette DATE,
   Chiffre_affaire DECIMAL(10,2),
   ID_theatre VARCHAR(50) NOT NULL,
   FOREIGN KEY (ID_theatre) REFERENCES Theatre(ID_theatre)
);

CREATE TABLE Theatre_compagnie (
   ID_compagnie VARCHAR(50) PRIMARY KEY,
   Nom VARCHAR(50),
   ID_theatre VARCHAR(50) NOT NULL,
   FOREIGN KEY (ID_theatre) REFERENCES Theatre(ID_theatre)
);

CREATE TABLE Production (
   ID_production VARCHAR(50) PRIMARY KEY,
   Prix DECIMAL(10,2),
   ID_theatre VARCHAR(50) NOT NULL
);

CREATE TABLE Production_Relation (
   ID_production VARCHAR(50) NOT NULL,
   ID_theatre_joue VARCHAR(50) NOT NULL,
   PRIMARY KEY (ID_production, ID_theatre_joue),
   FOREIGN KEY (ID_production) REFERENCES Production(ID_production),
   FOREIGN KEY (ID_theatre_joue) REFERENCES Theatre(ID_theatre)
);

CREATE TABLE Theatre_Compagnie_name (
    ID_compagnie VARCHAR(50) NOT NULL,
    Nom VARCHAR(50) NOT NULL,
    ID_theatre VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID_compagnie),
    FOREIGN KEY (ID_compagnie) REFERENCES Theatre_compagnie_name(ID_compagnie),
    FOREIGN KEY (ID_theatre) REFERENCES Theatre(ID_theatre)
);

CREATE TABLE Compagnie_Theatre (
    ID_compagnie VARCHAR(50) NOT NULL,
    ID_theatre VARCHAR(50) NOT NULL,
    FOREIGN KEY (ID_compagnie) REFERENCES Theatre_compagnie_name(ID_compagnie),
    FOREIGN KEY (ID_theatre) REFERENCES Theatre(ID_theatre),
    PRIMARY KEY (ID_compagnie, ID_theatre)
);

CREATE TABLE Grant_Agency (
    ID_agency VARCHAR(50) PRIMARY KEY,
    Name VARCHAR(50)
);

CREATE TABLE Theatre_Grant (
    ID_theatre VARCHAR(50),
    ID_agency VARCHAR(50),
    Amount DECIMAL(10,2),
    PRIMARY KEY (ID_theatre, ID_agency),
    FOREIGN KEY (ID_theatre) REFERENCES Theatre(ID_theatre),
    FOREIGN KEY (ID_agency) REFERENCES Grant_Agency(ID_agency)
);


CREATE TABLE Grant_Schedule (
    ID_theatre VARCHAR(50),
    ID_agency VARCHAR(50),
    Start_Date DATE,
    End_Date DATE,
    Payment_Frequency VARCHAR(50),
    PRIMARY KEY (ID_theatre, ID_agency),
    FOREIGN KEY (ID_theatre) REFERENCES Theatre(ID_theatre),
    FOREIGN KEY (ID_agency) REFERENCES Grant_Agency(ID_agency)
);

ALTER TABLE Theatre ADD Balance DECIMAL(10,2) DEFAULT 0;

ALTER TABLE Theatre_compagnie_name DROP COLUMN ID_theatre;


INSERT INTO Theatre (ID_theatre, Adresse, Nom, Capacite, Budget) VALUES ('T1', '789 Rue des Artistes', 'Théâtre de la Scène', 5, 110000.00);

INSERT INTO Theatre (ID_theatre, Adresse, Nom, Capacite, Budget) VALUES ('T2', '123 Avenue des Arts', 'Théâtre Lumière', 5, 85000.50);

INSERT INTO Theatre (ID_theatre, Adresse, Nom, Capacite, Budget) VALUES ('T3', '567 Rue du Théâtre', 'Théâtre des Ombres', 3, 190000.75);

INSERT INTO Theatre (ID_theatre, Adresse, Nom, Capacite, Budget) VALUES ('T4', '890 Boulevard du Spectacle', 'Théâtre du Rêve', 4, 95000.25);

INSERT INTO Theatre (ID_theatre, Adresse, Nom, Capacite, Budget) VALUES ('T5', '432 Rue de la Scène', 'Théâtre Harmonie', 4, 88000.00);

INSERT INTO Theatre (ID_theatre, Adresse, Nom, Capacite, Budget) VALUES ('T6', '654 Avenue du Spectacle', 'Théâtre Phoenix', 3, 105000.50);

INSERT INTO Theatre (ID_theatre, Adresse, Nom, Capacite, Budget) VALUES ('T7', '876 Rue des Arts', 'Théâtre Renaissance', 8, 160000.00);

INSERT INTO Theatre (ID_theatre, Adresse, Nom, Capacite, Budget) VALUES ('T8', '345 Boulevard des Artistes', 'Théâtre Majestic', 5, 125000.00);

INSERT INTO Theatre (ID_theatre, Adresse, Nom, Capacite, Budget) VALUES ('T9', '210 Avenue du Théâtre', 'Théâtre Élégance', 3, 115000.50);

INSERT INTO Theatre (ID_theatre, Adresse, Nom, Capacite, Budget) VALUES ('T10', '789 Rue du Spectacle', 'Théâtre Prestige', 2, 135000.00);

INSERT INTO Production (ID_production, Prix, ID_theatre) VALUES ('P1', 6000.00, 'T1');

INSERT INTO Production (ID_production, Prix, ID_theatre) VALUES ('P2', 5500.50, 'T2');

INSERT INTO Production (ID_production, Prix, ID_theatre) VALUES ('P3', 5200.75, 'T3');

INSERT INTO Production (ID_production, Prix, ID_theatre) VALUES ('P4', 6100.00, 'T4');

INSERT INTO Production (ID_production, Prix, ID_theatre) VALUES ('P5', 5700.50, 'T5');

INSERT INTO Production (ID_production, Prix, ID_theatre) VALUES ('P6', 5400.75, 'T6');

INSERT INTO Production (ID_production, Prix, ID_theatre) VALUES ('P7', 6200.00, 'T7');

INSERT INTO Production (ID_production, Prix, ID_theatre) VALUES ('P8', 5600.50, 'T8');

INSERT INTO Production (ID_production, Prix, ID_theatre) VALUES ('P9', 5300.75, 'T9');

INSERT INTO Production (ID_production, Prix, ID_theatre) VALUES ('P10', 6400.00, 'T10');

INSERT INTO Representation (ID_representation, Titre, Date_representation, Prix, ID_theatre) VALUES ('R11', 'La Traviata', TO_DATE('2023-06-20', 'YYYY-MM-DD'), 52.00, 'T1');

INSERT INTO Representation (ID_representation, Titre, Date_representation, Prix, ID_theatre) VALUES ('R12', 'La Flûte enchantée', TO_DATE('2023-07-25', 'YYYY-MM-DD'), 53.75, 'T2');

INSERT INTO Representation (ID_representation, Titre, Date_representation, Prix, ID_theatre) VALUES ('R13', 'Carmen', TO_DATE('2023-08-30', 'YYYY-MM-DD'), 49.50, 'T3');

INSERT INTO Representation (ID_representation, Titre, Date_representation, Prix, ID_theatre) VALUES ('R14', 'La Bohème', TO_DATE('2023-09-05', 'YYYY-MM-DD'), 48.25, 'T4');

INSERT INTO Representation (ID_representation, Titre, Date_representation, Prix, ID_theatre) VALUES ('R15', 'Don Giovanni', TO_DATE('2023-10-10', 'YYYY-MM-DD'), 51.50, 'T5');

INSERT INTO Representation (ID_representation, Titre, Date_representation, Prix, ID_theatre) VALUES ('R16', 'Madame Butterfly', TO_DATE('2023-11-15', 'YYYY-MM-DD'), 50.75, 'T6');

INSERT INTO Representation (ID_representation, Titre, Date_representation, Prix, ID_theatre) VALUES ('R17', 'Rigoletto', TO_DATE('2023-12-20', 'YYYY-MM-DD'), 49.25, 'T7');

INSERT INTO Representation (ID_representation, Titre, Date_representation, Prix, ID_theatre) VALUES ('R18', 'La Traviata', TO_DATE('2023-06-25', 'YYYY-MM-DD'), 52.00, 'T8');

INSERT INTO Representation (ID_representation, Titre, Date_representation, Prix, ID_theatre) VALUES ('R19', 'La Flûte enchantée', TO_DATE('2023-07-30', 'YYYY-MM-DD'), 53.75, 'T9');

INSERT INTO Representation (ID_representation, Titre, Date_representation, Prix, ID_theatre) VALUES ('R20', 'Carmen', TO_DATE('2023-08-05', 'YYYY-MM-DD'), 49.50, 'T10');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK18', TO_DATE('2023-07-20', 'YYYY-MM-DD'), 54.50, 0, 'R5', 'T2');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK19', TO_DATE('2023-08-25', 'YYYY-MM-DD'), 49.00, 0, 'R6', 'T3');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK20', TO_DATE('2023-09-30', 'YYYY-MM-DD'), 48.25, 0, 'R7', 'T4');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK21', TO_DATE('2023-10-05', 'YYYY-MM-DD'), 47.50, 0, 'R8', 'T5');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK22', TO_DATE('2023-11-10', 'YYYY-MM-DD'), 46.75, 0, 'R9', 'T6');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK23', TO_DATE('2023-12-15', 'YYYY-MM-DD'), 45.00, 0, 'R10', 'T7');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK24', TO_DATE('2023-12-20', 'YYYY-MM-DD'), 44.25, 0, 'R11', 'T8');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK25', TO_DATE('2023-12-22', 'YYYY-MM-DD'), 43.50, 0, 'R12', 'T9');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK26', TO_DATE('2023-12-24', 'YYYY-MM-DD'), 42.75, 0, 'R13', 'T10');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK27', TO_DATE('2023-06-10', 'YYYY-MM-DD'), 54.50, 0, 'R11', 'T1');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK28', TO_DATE('2023-07-15', 'YYYY-MM-DD'), 49.00, 0, 'R12', 'T2');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK29', TO_DATE('2023-08-20', 'YYYY-MM-DD'), 48.25, 0, 'R13', 'T3');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK30', TO_DATE('2023-09-25', 'YYYY-MM-DD'), 47.50, 0, 'R14', 'T4');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK31', TO_DATE('2023-10-30', 'YYYY-MM-DD'), 46.75, 0, 'R15', 'T5');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK32', TO_DATE('2023-11-05', 'YYYY-MM-DD'), 46.00, 0, 'R16', 'T6');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre) VALUES ('TICK33', TO_DATE('2023-12-10', 'YYYY-MM-DD'), 45.25, 0, 'R17', 'T7');

INSERT INTO Theatre_compagnie_name (ID_compagnie, Nom) VALUES ('C1', 'Compagnie_Anas');
INSERT INTO Theatre_compagnie_name (ID_compagnie, Nom) VALUES ('C2', 'Compagnie_Mordjane');
INSERT INTO Theatre_compagnie_name (ID_compagnie, Nom) VALUES ('C3', 'Compagnie_Felix');
INSERT INTO Theatre_compagnie_name (ID_compagnie, Nom) VALUES ('C4', 'Compagnie_UGC');


INSERT INTO Compagnie_Theatre (ID_compagnie, ID_theatre) VALUES ('C1', 'T1');
INSERT INTO Compagnie_Theatre (ID_compagnie, ID_theatre) VALUES ('C2', 'T2');
INSERT INTO Compagnie_Theatre (ID_compagnie, ID_theatre) VALUES ('C3', 'T3');
INSERT INTO Compagnie_Theatre (ID_compagnie, ID_theatre) VALUES ('C3', 'T4');
INSERT INTO Compagnie_Theatre (ID_compagnie, ID_theatre) VALUES ('C1', 'T5');
INSERT INTO Compagnie_Theatre (ID_compagnie, ID_theatre) VALUES ('C2', 'T6');
INSERT INTO Compagnie_Theatre (ID_compagnie, ID_theatre) VALUES ('C3', 'T7');
INSERT INTO Compagnie_Theatre (ID_compagnie, ID_theatre) VALUES ('C3', 'T8');
INSERT INTO Compagnie_Theatre (ID_compagnie, ID_theatre) VALUES ('C2', 'T9');
INSERT INTO Compagnie_Theatre (ID_compagnie, ID_theatre) VALUES ('C1', 'T10');

INSERT INTO Grant_Agency (ID_agency, Name) VALUES ('M1', 'Municipalité');
INSERT INTO Grant_Agency (ID_agency, Name) VALUES ('C1', 'Ministère de la Culture');

INSERT INTO Theatre_Grant (ID_theatre, ID_agency, Amount) VALUES ('T1', 'M1', 20000.00);
INSERT INTO Theatre_Grant (ID_theatre, ID_agency, Amount) VALUES ('T2', 'C1', 50000.00);

INSERT INTO Grant_Schedule (ID_theatre, ID_agency, Start_Date, End_Date, Payment_Frequency) VALUES ('T1', 'M1', TO_DATE('2023-01-01', 'YYYY-MM-DD'), TO_DATE('2028-01-01', 'YYYY-MM-DD'), 'Mensuel');
INSERT INTO Grant_Schedule (ID_theatre, ID_agency, Start_Date, End_Date, Payment_Frequency) VALUES ('T2', 'C1', TO_DATE('2023-01-01', 'YYYY-MM-DD'), TO_DATE('2028-01-01', 'YYYY-MM-DD'), 'Semestriel');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre)
VALUES ('TICK34', TO_DATE('2023-06-15', 'YYYY-MM-DD'), 55.00, 0, 'R11', 'T1');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre)
VALUES ('TICK35', TO_DATE('2023-07-20', 'YYYY-MM-DD'), 50.00, 0, 'R12', 'T2');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre)
VALUES ('TICK36', TO_DATE('2023-08-25', 'YYYY-MM-DD'), 49.25, 0, 'R13', 'T3');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre)
VALUES ('TICK37', TO_DATE('2023-09-30', 'YYYY-MM-DD'), 48.50, 0, 'R14', 'T4');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre)
VALUES ('TICK38', TO_DATE('2023-10-05', 'YYYY-MM-DD'), 47.75, 0, 'R15', 'T5');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre)
VALUES ('TICK39', TO_DATE('2023-11-10', 'YYYY-MM-DD'), 47.00, 0, 'R16', 'T6');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre)
VALUES ('TICK40', TO_DATE('2023-12-15', 'YYYY-MM-DD'), 46.25, 0, 'R17', 'T7');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre)
VALUES ('TICK41', TO_DATE('2023-12-20', 'YYYY-MM-DD'), 45.50, 0, 'R18', 'T8');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre)
VALUES ('TICK42', TO_DATE('2023-12-22', 'YYYY-MM-DD'), 44.75, 0, 'R19', 'T9');

INSERT INTO Ticket (ID_ticket, Date_ticket, Prix, Reduction, ID_representation, ID_theatre)
VALUES ('TICK43', TO_DATE('2023-12-24', 'YYYY-MM-DD'), 44.00, 0, 'R20', 'T10');


INSERT INTO Compagnie_Theatre (ID_compagnie, ID_theatre) VALUES ('C3', 'T1');
INSERT INTO Compagnie_Theatre (ID_compagnie, ID_theatre) VALUES ('C4', 'T2');


INSERT INTO Representation (ID_representation, Titre, Date_representation, Prix, ID_theatre)
VALUES ('R1', 'EFREI_PARIS', TO_DATE('2023-01-07', 'YYYY-MM-DD'), 50.00, 'T1');

INSERT INTO Representation (ID_representation, Titre, Date_representation, Prix, ID_theatre)
VALUES ('R2', 'EFREI_BORDEAUX', TO_DATE('2023-01-07', 'YYYY-MM-DD'), 55.00, 'T1');


-- Sélects pour afficher le contenu des tables 

-- liste de tout les thétres avec leurs représenataion
SELECT Theatre.Nom AS Theatre_Nom, Representation.Titre AS Representation_Titre, Representation.Date_representation
FROM Theatre
JOIN Representation ON Theatre.ID_theatre = Representation.ID_theatre;

-- select de ticket associé à leurs représenation
SELECT Ticket.ID_ticket, Ticket.Date_ticket, Ticket.Prix AS Ticket_Prix, Ticket.Reduction,
       Representation.Titre AS Representation_Titre, Representation.Date_representation,
       Theatre.Nom AS Theatre_Nom
FROM Ticket
JOIN Representation ON Ticket.ID_representation = Representation.ID_representation
JOIN Theatre ON Ticket.ID_theatre = Theatre.ID_theatre;


-- Liste des représentations avec le titre, la date, le prix, le nom du théâtre et l'adresse du théâtre 
SELECT Representation.ID_representation, Representation.Titre, Representation.Date_representation,
       Representation.Prix, Theatre.Nom AS Theatre_Nom, Theatre.Adresse AS Theatre_Adresse
FROM Representation
JOIN Theatre ON Representation.ID_theatre = Theatre.ID_theatre;



-- Remplissage de la capacité d'un théatre en %
SELECT
    T.ID_theatre,
    T.Nom AS Nom_theatre,
    T.Capacite AS Capacite_theatre,
    COUNT(Ti.ID_ticket) AS Nombre_Billets_Vendus,
    (COUNT(Ti.ID_ticket) / T.Capacite) * 100 AS Pourcentage_Remplissage
FROM
    Theatre T
LEFT JOIN
    Ticket Ti ON T.ID_theatre = Ti.ID_theatre
GROUP BY
    T.ID_theatre, T.Nom, T.Capacite
ORDER BY
    T.ID_theatre;



-- Nombre de ticket vendu par représentation
SELECT
  Representation.ID_representation,
  Representation.Titre,
  COUNT(Ticket.ID_ticket) AS Nombre_Tickets_Vendus
FROM
  Representation
LEFT JOIN
  Ticket ON Representation.ID_representation = Ticket.ID_representation
GROUP BY
  Representation.ID_representation, Representation.Titre;


-- chiffre d'affaire par scéance 
SELECT
  Representation.ID_representation,
  Representation.Titre,
  SUM(Ticket.Prix) AS chiffre_d_affaire_par_sceance
FROM
  Representation
LEFT JOIN
  Ticket ON Representation.ID_representation = Ticket.ID_representation
GROUP BY
  Representation.ID_representation, Representation.Titre;



SELECT * FROM Theatre;

SELECT * FROM Representation;

SELECT * FROM Ticket;

SELECT * FROM Recette;

SELECT * FROM Theatre_compagnie;

SELECT * FROM Production;

SELECT * FROM Production_Relation;

SELECT * FROM Theatre;

SELECT * FROM Representation;

SELECT * FROM Ticket;

SELECT * FROM Representation;

SELECT * FROM Recette;

SELECT * FROM Theatre_compagnie;

SELECT * FROM Theatre_compagnie;

SELECT * FROM Production;

SELECT * FROM Production_Relation;

select * from Compagnie_Theatre;


-- FONCTIONS

-- Fonction qui affiche les représentations joués en même temps
CREATE OR REPLACE FUNCTION findDuplicateShows RETURN VARCHAR2 AS
  TYPE showRecord IS RECORD (
    Titre1 Representation.Titre%TYPE,
    Theatre1 Representation.ID_theatre%TYPE,
    Titre2 Representation.Titre%TYPE,
    Theatre2 Representation.ID_theatre%TYPE
  );

  TYPE showTable IS TABLE OF showRecord INDEX BY PLS_INTEGER;

  showInfo VARCHAR2(500) := '';
  showList showTable;
  counter PLS_INTEGER := 0;
BEGIN
  FOR rec IN (
    SELECT DISTINCT
      R1.Titre AS Titre1, R1.ID_theatre AS Theatre1,
      R2.Titre AS Titre2, R2.ID_theatre AS Theatre2
    FROM
      Representation R1
    JOIN
      Representation R2
    ON
      R1.ID_theatre = R2.ID_theatre
      AND R1.Date_representation = R2.Date_representation
      AND R1.ID_representation != R2.ID_representation
  ) LOOP
    counter := counter + 1;
    showList(counter) := rec;
  END LOOP;

  IF counter > 0 THEN
    FOR i IN 1..counter LOOP
      showInfo := showInfo || 'Les représentations ' || showList(i).Titre1 || ' au théâtre ' || showList(i).Theatre1 || ' et ' || showList(i).Titre2 || ' au théâtre ' || showList(i).Theatre2 || ' sont jouées en même temps.' || CHR(10);
    END LOOP;
    RETURN showInfo;
  ELSE
    RETURN 'Aucune représentation jouée en même temps.';
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    RETURN 'Erreur lors de la recherche des représentations.';
END;
/

SELECT findDuplicateShows FROM DUAL;


-- Fonction récup prix bilets date
CREATE OR REPLACE FUNCTION GetTicketInfo RETURN VARCHAR2 AS
  ticketInfo VARCHAR2(1000);
BEGIN
  -- Obtient les prix des billets pour la date spécifiée
  SELECT 'Prix des billets pour le 20-DEC-23 : ' || TO_CHAR(Prix)
  INTO ticketInfo
  FROM Representation
  WHERE Date_representation = TO_DATE('20-DEC-23', 'DD-MON-YY');

  RETURN ticketInfo;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN 'Aucune information disponible pour la date spécifiée.';
END;
/

SELECT GetTicketInfo() FROM DUAL;


-- Remplis la capacité des théatres à 60 sauf pour T1
--UPDATE Theatre
--SET Capacite = FLOOR(Capacite * 0.6)
--WHERE ID_theatre <> 'T1';




-- Fonction discount avec insert manuel
CREATE OR REPLACE FUNCTION CalculateTicketPrice(
    p_representation_title VARCHAR2,
    p_discount_percentage NUMBER DEFAULT 0
) RETURN NUMBER
IS
    v_base_price NUMBER;
    v_discounted_price NUMBER;
BEGIN
   
    SELECT Prix INTO v_base_price
    FROM Representation
    WHERE Titre = p_representation_title;

    v_discounted_price := v_base_price - (v_base_price * (p_discount_percentage / 100));

    
    IF v_discounted_price < 0 THEN
        v_discounted_price := 0;
    END IF;

    RETURN v_discounted_price;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN -1; 
    WHEN OTHERS THEN
        RETURN -1; 
END CalculateTicketPrice;


select * from representation;

DECLARE
    v_ticket_price DECIMAL(10,2);
BEGIN
    v_ticket_price := CalculateTicketPrice('EFREI_PARIS', 15);
    DBMS_OUTPUT.PUT_LINE('Ticket Price: ' || v_ticket_price);
END;



-- Fonction Discout étudiant
CREATE OR REPLACE FUNCTION CalculateTicketPrice(
    p_representation_title VARCHAR2,
    p_is_student BOOLEAN DEFAULT FALSE
) RETURN NUMBER
IS
    v_base_price NUMBER;
    v_discount_percentage NUMBER := 0;
    v_discounted_price NUMBER;
BEGIN
-- Récupère le prix de base depuis la table Representation en utilisant le titre donné
    SELECT Prix INTO v_base_price
    FROM Representation
    WHERE Titre = p_representation_title;

-- Vérifie si le client est un étudiant et définit la réduction en conséquence
    IF p_is_student THEN
        v_discount_percentage := 20;
    END IF;

-- Calcule la réduction
    v_discounted_price := v_base_price - (v_base_price * (v_discount_percentage / 100));

-- Assure que le prix ne soit pas négatif
    IF v_discounted_price < 0 THEN
        v_discounted_price := 0;
    END IF;

    RETURN v_discounted_price;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN -1; 
    WHEN OTHERS THEN
        RETURN -1; 
END CalculateTicketPrice;
/


-- Example usage:
DECLARE
    v_ticket_price DECIMAL(10,2);
BEGIN
    v_ticket_price := CalculateTicketPrice('La Bohème', TRUE); -- Assuming the customer is a student
    DBMS_OUTPUT.PUT_LINE('Ticket Price: ' || v_ticket_price);
END;
/







-- calcule de la réduction 
CREATE OR REPLACE FUNCTION calculate_discounted_price(
    in_ticket_id VARCHAR2
)
RETURN DECIMAL
IS
    v_theatre_capacity INT;
    v_sold_tickets INT;
    v_discount DECIMAL(10, 2) := 0.30; -- 30% de rabais
    v_ticket_price DECIMAL(10, 2);
    v_discounted_price DECIMAL(10, 2);
BEGIN
    -- Récupérer la capacité du théâtre du ticket
    SELECT T.Capacite
    INTO v_theatre_capacity
    FROM Theatre T
    WHERE T.ID_theatre = (
        SELECT R.ID_theatre
        FROM Representation R
        JOIN Ticket Ti ON R.ID_representation = Ti.ID_representation
        WHERE Ti.ID_ticket = in_ticket_id
    );

    -- Récupérer le nombre de billets vendus pour la représentation du ticket
    SELECT COUNT(Ti.ID_ticket)
    INTO v_sold_tickets
    FROM Ticket Ti
    WHERE Ti.ID_representation = (
        SELECT ID_representation
        FROM Ticket
        WHERE ID_ticket = in_ticket_id
    );

    -- Récupérer le prix du ticket
    SELECT Ti.Prix
    INTO v_ticket_price
    FROM Ticket Ti
    WHERE Ti.ID_ticket = in_ticket_id;

    -- Calculer le pourcentage de remplissage de la salle
    IF v_theatre_capacity > 0 THEN
        v_discounted_price := CASE
            WHEN (v_sold_tickets / v_theatre_capacity) * 100 > 30 THEN
                v_ticket_price * (1 - v_discount)
            ELSE
                v_ticket_price
        END;
    ELSE
        v_discounted_price := v_ticket_price;
    END IF;

    RETURN v_discounted_price;
END;
/



-- Exemple d'utilisation de la fonction
DECLARE
    ticket_id VARCHAR2(50) := 'TICK34'; -- Remplacez par l'ID du ticket 
    discounted_price DECIMAL(10, 2);
BEGIN
    discounted_price := calculate_discounted_price(ticket_id);
    DBMS_OUTPUT.PUT_LINE('Discounted Price: ' || discounted_price);
END;
/



CREATE OR REPLACE PROCEDURE Calculate_Balance AS
BEGIN
    -- Calcul du solde pour chaque théâtre
    FOR rec IN (SELECT ID_theatre FROM Theatre) LOOP
        DECLARE
            total_revenue DECIMAL(10,2) := 0;
            total_expense DECIMAL(10,2) := 0;
            net_balance DECIMAL(10,2);
        BEGIN
            -- Calcul des revenus pour le mois en cours
            SELECT SUM(Chiffre_affaire)
            INTO total_revenue
            FROM Recette
            WHERE ID_theatre = rec.ID_theatre
            AND EXTRACT(MONTH FROM Date_recette) = EXTRACT(MONTH FROM SYSDATE)
            AND EXTRACT(YEAR FROM Date_recette) = EXTRACT(YEAR FROM SYSDATE);

            -- Calcul des dépenses pour le mois en cours
            SELECT SUM(Prix)
            INTO total_expense
            FROM Ticket
            WHERE ID_theatre = rec.ID_theatre
            AND EXTRACT(MONTH FROM Date_ticket) = EXTRACT(MONTH FROM SYSDATE)
            AND EXTRACT(YEAR FROM Date_ticket) = EXTRACT(YEAR FROM SYSDATE);

            -- Calcul du solde
            net_balance := total_revenue - total_expense;

            -- Mise à jour du solde dans la table Theatre
            UPDATE Theatre
            SET Balance = net_balance
            WHERE ID_theatre = rec.ID_theatre;
        END;
    END LOOP;
END Calculate_Balance;
/



CREATE OR REPLACE TRIGGER Trigger_Balance_Update
AFTER INSERT ON Representation
FOR EACH ROW
BEGIN
    -- Mettre à jour le solde après chaque représentation
    Calculate_Balance;
END;
/


CALL Calculate_Balance;


CREATE OR REPLACE PROCEDURE Payment_Rules AS
    total_fees DECIMAL(10, 2);
    staging_costs DECIMAL(10, 2);
    travel_expenses DECIMAL(10, 2);
BEGIN
    SELECT SUM(Prix)
    INTO total_fees
    FROM Ticket
    WHERE ID_theatre = 'T1' AND Reduction = 0;

    SELECT Prix
    INTO staging_costs
    FROM Production
    WHERE ID_theatre = 'T1';

    SELECT SUM(Prix)
    INTO travel_expenses
    FROM Ticket
    WHERE ID_theatre = 'T1' AND Reduction > 0;

    DBMS_OUTPUT.PUT_LINE('Frais totaux des comédiens pour le théâtre T1 : ' || total_fees);
    DBMS_OUTPUT.PUT_LINE('Coûts de mise en scène pour le théâtre T1 : ' || staging_costs);
    DBMS_OUTPUT.PUT_LINE('Frais de déplacement pour le théâtre T1 : ' || travel_expenses);
END Payment_Rules;
/

 

CALL Payment_Rules;


-- Représentations non jouées dans certains théâtres
SELECT r.ID_representation, r.Titre, r.Date_representation, t.ID_theatre, t.Nom
FROM Representation r, Theatre t
WHERE NOT EXISTS (
    SELECT 1
    FROM Ticket ti
    WHERE ti.ID_representation = r.ID_representation AND ti.ID_theatre = t.ID_theatre
);


-- Représentations les plus populaires à une certaine période:
SELECT r.ID_representation, r.Titre, r.Date_representation, COUNT(t.ID_ticket) AS Nombre_de_tickets_vendus
FROM Representation r
LEFT JOIN Ticket t ON r.ID_representation = t.ID_representation
WHERE r.Date_representation BETWEEN TO_DATE('2023-06-01', 'YYYY-MM-DD') AND TO_DATE('2023-06-30', 'YYYY-MM-DD')
GROUP BY r.ID_representation, r.Titre, r.Date_representation
ORDER BY Nombre_de_tickets_vendus DESC
FETCH FIRST 5 ROWS ONLY;

-- Nombre de représentations
SELECT COUNT(*) AS Nombre_de_representation
FROM Representation;

-- Nombre de spectateurs potentiels
SELECT SUM(Capacite) AS Nombre_de_spectateurs_potentiels
FROM Theatre;

-- Nombre de places vendues
SELECT COUNT(*) AS Nombre_de_places_vendues
FROM Ticket;


